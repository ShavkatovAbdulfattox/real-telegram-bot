const { Composer, Markup } = require("telegraf");
const composer = new Composer();

// –°—Ç–∞—Ä—Ç
// –°—Ç–∞—Ä—Ç
composer.start((ctx) => {
  // Create the language selection keyboard
  const keyboard = Markup.inlineKeyboard([
    Markup.button.callback("üá∫üáø O'zbek", "en"),
    Markup.button.callback("üá∑üá∫ –†—É—Å—Å–∫–∏–π", "ru"),
  ]);

  // Send the language selection message with the keyboard
  ctx.reply("Tilni tanlang:", keyboard);
});
// Language selection callback handler
composer.action("en", (ctx) => {
  // Set the selected language to English
  ctx.session = { selectedLanguage: "en" };
  ctx.i18n.locale("en");
  ctx.reply(
    ctx.i18n.t("Ozbek tilini tanladingiz", {
      ctx,
    }),
    Markup.keyboard([
      ["üî∞ Kirish"],
      ["üè¨ Magazin"],
      ["üìÉ Xujjatlar"],
      ["üìç Lokatsiya"],
      ["‚úçÔ∏è Qayta Aloqa"],
    ]).resize()
  );
});

composer.action("ru", (ctx) => {
  // Set the selected language to Russian
  ctx.session = { selectedLanguage: "ru" };
  ctx.i18n.locale("ru");
  ctx.reply(
    ctx.i18n.t("–Ø–∑—ã–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —Ä—É—Å—Å–∫–∏–π"),
    Markup.keyboard([
      ["üî∞ –í–≤–µ–¥–µ–Ω–∏–µ"],
      ["üè¨ –ú–∞–≥–∞–∑–∏–Ω"],
      ["üìÉ –î–æ–∫—É–º–µ–Ω—Ç—ã"],
      ["üìç –õ–æ–∫–∞—Ç—Ü–∏—è"],
      ["‚úçÔ∏è –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"],
    ]).resize()
  );
});

// –ü–æ–º–æ—â—å=
composer.help(async (ctx) => {
  try {
    await ctx.replyWithHTML(
      ctx.i18n.t("command"),
      Markup.inlineKeyboard([
        [
          Markup.button.url("–¢–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª", "https://t.me/apple_gold_uz"),
          Markup.button.url("–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º", "https://t.me/Abdurahmon_F"),
        ],
        [Markup.button.url("–¢–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫–∞", "https://t.me/vwhoami")],
      ])
    );
  } catch (e) {
    console.error("error in Help command", e);
  }
});

module.exports = composer;
