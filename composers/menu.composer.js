const { Composer, Markup } = require("telegraf");
const composer = new Composer();

// –ö–Ω–æ–ø–∫–∞ "–û–± –∞–≤—Ç–æ—Ä–µ"
composer.hears("üî∞ –í–≤–µ–¥–µ–Ω–∏–µ", async (ctx) => {
  try {
    // Send the video with caption and inline keyboard
    const selectedLanguage = ctx.session?.selectedLanguage || "ru";
    await ctx.i18n.locale(selectedLanguage);
    const rulesMessage = ctx.i18n.t("start", { ctx }); // Retrieve the translation for 'rules'
    ctx.reply(rulesMessage);
  } catch (e) {
    console.error("error in About button", e);
  }
});

// –ö–Ω–æ–ø–∫–∞ "–û–± –∞–≤—Ç–æ—Ä–µ"
composer.hears("üè¨ –ú–∞–≥–∞–∑–∏–Ω", async (ctx) => {
  try {
    const selectedLanguage = ctx.session?.selectedLanguage || "ru";
    await ctx.i18n.locale(selectedLanguage);
    // Send a chat action to show the user that the bot is processing their request
    await ctx.replyWithChatAction("upload_video");

    // Send the video with caption and inline keyboard
    await ctx.replyWithVideo(
      {
        source: "shop.MP4",
      },
      {
        caption: ctx.i18n.t("shop"),
      },
      {
        disable_web_page_preview: true,
      }
    );
  } catch (e) {
    console.error("error in About button", e);
  }
});

// –ö–Ω–æ–ø–∫–∞ "–î–æ–∫—É–º–µ–Ω—Ç—ã"
composer.hears("üìÉ –î–æ–∫—É–º–µ–Ω—Ç—ã", async (ctx) => {
  try {
    const selectedLanguage = ctx.session?.selectedLanguage || "ru";
    await ctx.i18n.locale(selectedLanguage);
    await ctx.reply(
      ctx.i18n.t("documents"),
      Markup.inlineKeyboard([
        [Markup.button.callback("–ü—Ä–∞–≤–∏–ª–∞", "btn_category1")],
        [Markup.button.url("–ö–∞–Ω–∞–ª", "https://t.me/apple_gold_uz")],
      ])
    );
  } catch (e) {
    console.error("error in Document button", e);
  }
});

// –ö–Ω–æ–ø–∫–∞ "–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å"
composer.hears("üìç –õ–æ–∫–∞—Ç—Ü–∏—è", async (ctx) => {
  try {
    const selectedLanguage = ctx.session?.selectedLanguage || "ru";
    await ctx.i18n.locale(selectedLanguage);
    await ctx.replyWithLocation(41.338121, 69.270471, {
      live_period: 60,
      title: "Malika Bozor",
    });
    await ctx.reply(ctx.i18n.t("location"));
  } catch (e) {
    console.error("error in Support button", e);
  }
});

// –ö–Ω–æ–ø–∫–∞ "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"
composer.hears("‚úçÔ∏è –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å", async (ctx) => {
  try {
    const selectedLanguage = ctx.session?.selectedLanguage || "ru";
    await ctx.i18n.locale(selectedLanguage);
    await ctx.reply(
      ctx.i18n.t("feedback"),
      Markup.inlineKeyboard([
        [
          Markup.button.url("–ö–∞–Ω–∞–ª", "https://t.me/apple_gold_uz"),
          Markup.button.url("–¢–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫–∞", "https://t.me/vwhoami"),
        ],
        [Markup.button.url("–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º", "https://t.me/Abdurahmon_F")],
      ])
    );
  } catch (e) {
    console.error("error in Feedback button", e);
  }
});

module.exports = composer;
